
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIRECTIVES DIVIDE EQUALS EXP IDENTIFIER LIBRARIES LPAREN MINUS NS NUMBER PLUS PRINT RPAREN SEMIC SQR TIMES TYPEstatements   : statements statement\n                    | statementstatement    : declaration\n                    | statement assignment\n                    | statement prt\n                    | directivesdirectives  : NS DIRECTIVES LIBRARIESdeclaration  : TYPE IDENTIFIER SEMIC\n                    | TYPE IDENTIFIER EQUALS expression SEMICassignment   : IDENTIFIER EQUALS expression SEMICprt  : PRINT LPAREN expression RPAREN SEMICexpression   : expression PLUS termexpression   : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorfactor : EXP LPAREN factor value RPARENfactor : SQR LPAREN factor RPARENvalue   : NUMBERexpression   : termterm : factorfactor   : value\n                | IDENTIFIER\n                | LPAREN expression RPAREN'
    
_lr_action_items = {'TYPE':([0,1,2,3,4,7,8,9,16,18,30,39,47,],[5,5,-2,-3,-6,-1,-4,-5,-8,-7,-10,-9,-11,]),'NS':([0,1,2,3,4,7,8,9,16,18,30,39,47,],[6,6,-2,-3,-6,-1,-4,-5,-8,-7,-10,-9,-11,]),'$end':([1,2,3,4,7,8,9,16,18,30,39,47,],[0,-2,-3,-6,-1,-4,-5,-8,-7,-10,-9,-11,]),'IDENTIFIER':([2,3,4,5,7,8,9,14,15,16,17,18,24,30,31,32,33,34,35,37,39,47,],[10,-3,-6,12,10,-4,-5,19,19,-8,19,-7,19,-10,19,19,19,19,19,19,-9,-11,]),'PRINT':([2,3,4,7,8,9,16,18,30,39,47,],[11,-3,-6,11,-4,-5,-8,-7,-10,-9,-11,]),'DIRECTIVES':([6,],[13,]),'EQUALS':([10,12,],[14,17,]),'LPAREN':([11,14,15,17,23,24,26,31,32,33,34,35,37,],[15,24,24,24,35,24,37,24,24,24,24,24,24,]),'SEMIC':([12,19,20,21,22,25,27,29,38,40,41,42,43,45,49,50,],[16,-22,30,-19,-20,-21,-18,39,47,-12,-13,-14,-15,-23,-17,-16,]),'LIBRARIES':([13,],[18,]),'EXP':([14,15,17,24,31,32,33,34,35,37,],[23,23,23,23,23,23,23,23,23,23,]),'SQR':([14,15,17,24,31,32,33,34,35,37,],[26,26,26,26,26,26,26,26,26,26,]),'NUMBER':([14,15,17,19,24,25,27,31,32,33,34,35,37,44,45,49,50,],[27,27,27,-22,27,-21,-18,27,27,27,27,27,27,27,-23,-17,-16,]),'TIMES':([19,21,22,25,27,40,41,42,43,45,49,50,],[-22,33,-20,-21,-18,33,33,-14,-15,-23,-17,-16,]),'DIVIDE':([19,21,22,25,27,40,41,42,43,45,49,50,],[-22,34,-20,-21,-18,34,34,-14,-15,-23,-17,-16,]),'PLUS':([19,20,21,22,25,27,28,29,36,40,41,42,43,45,49,50,],[-22,31,-19,-20,-21,-18,31,31,31,-12,-13,-14,-15,-23,-17,-16,]),'MINUS':([19,20,21,22,25,27,28,29,36,40,41,42,43,45,49,50,],[-22,32,-19,-20,-21,-18,32,32,32,-12,-13,-14,-15,-23,-17,-16,]),'RPAREN':([19,21,22,25,27,28,36,40,41,42,43,45,46,48,49,50,],[-22,-19,-20,-21,-18,38,45,-12,-13,-14,-15,-23,49,50,-17,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,7,]),'declaration':([0,1,],[3,3,]),'directives':([0,1,],[4,4,]),'assignment':([2,7,],[8,8,]),'prt':([2,7,],[9,9,]),'expression':([14,15,17,24,],[20,28,29,36,]),'term':([14,15,17,24,31,32,],[21,21,21,21,40,41,]),'factor':([14,15,17,24,31,32,33,34,35,37,],[22,22,22,22,22,22,42,43,44,46,]),'value':([14,15,17,24,31,32,33,34,35,37,44,],[25,25,25,25,25,25,25,25,25,25,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_program','Syntax.py',12),
  ('statements -> statement','statements',1,'p_program','Syntax.py',13),
  ('statement -> declaration','statement',1,'p_statement','Syntax.py',21),
  ('statement -> statement assignment','statement',2,'p_statement','Syntax.py',22),
  ('statement -> statement prt','statement',2,'p_statement','Syntax.py',23),
  ('statement -> directives','statement',1,'p_statement','Syntax.py',24),
  ('directives -> NS DIRECTIVES LIBRARIES','directives',3,'p_directives','Syntax.py',29),
  ('declaration -> TYPE IDENTIFIER SEMIC','declaration',3,'p_declaration','Syntax.py',33),
  ('declaration -> TYPE IDENTIFIER EQUALS expression SEMIC','declaration',5,'p_declaration','Syntax.py',34),
  ('assignment -> IDENTIFIER EQUALS expression SEMIC','assignment',4,'p_assignment','Syntax.py',48),
  ('prt -> PRINT LPAREN expression RPAREN SEMIC','prt',5,'p_print','Syntax.py',58),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Syntax.py',64),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Syntax.py',69),
  ('term -> term TIMES factor','term',3,'p_term_times','Syntax.py',74),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Syntax.py',79),
  ('factor -> EXP LPAREN factor value RPAREN','factor',5,'p_factor_exp','Syntax.py',84),
  ('factor -> SQR LPAREN factor RPAREN','factor',4,'p_factor_sqr','Syntax.py',89),
  ('value -> NUMBER','value',1,'p_values_num','Syntax.py',94),
  ('expression -> term','expression',1,'p_expression_term','Syntax.py',99),
  ('term -> factor','term',1,'p_term_factor','Syntax.py',104),
  ('factor -> value','factor',1,'p_factor_value','Syntax.py',109),
  ('factor -> IDENTIFIER','factor',1,'p_factor_value','Syntax.py',110),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_value','Syntax.py',111),
]
