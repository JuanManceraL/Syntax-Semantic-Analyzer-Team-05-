
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CCURLB DIRECTIVES DIVIDE ELSE EQUALS EXP IDENTIFIER IF LIBRARIES LPAREN MINUS NS NUMBER OCURLB OP_BOOL PLUS PRINT RPAREN SEMIC SQR TIMES TYPE VAL_BOOLstatements   : statements statement\n                    | statement\n                    | statement    : declaration\n                    | assignment\n                    | prt\n                    | directives\n                    | ifstdirectives  : NS DIRECTIVES LIBRARIESdeclaration  : TYPE IDENTIFIER SEMIC\n                    | TYPE IDENTIFIER EQUALS expression SEMICassignment   : IDENTIFIER EQUALS expression SEMICprt  : PRINT LPAREN expression RPAREN SEMICifst : IF LPAREN valbool RPAREN OCURLB statements CCURLB\n            | IF LPAREN valbool RPAREN OCURLB statements CCURLB ELSE OCURLB statements CCURLBexpression   : expression PLUS termexpression   : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorfactor : EXP LPAREN factor value RPARENfactor : SQR LPAREN factor RPARENvalue   : NUMBER valbool     : VAL_BOOL\n                    | LPAREN valbool RPAREN\n                    | expression OP_BOOL expressionexpression   : termterm : factorfactor   : value\n                | IDENTIFIER\n                | LPAREN expression RPAREN\n                | MINUS factor'
    
_lr_action_items = {'TYPE':([0,1,2,3,4,5,6,7,13,19,32,38,52,60,62,66,68,70,71,72,],[8,8,-2,-4,-5,-6,-7,-8,-1,-10,-9,-12,-11,-13,8,8,-14,8,8,-15,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,13,15,16,18,19,20,24,27,32,33,38,39,40,41,42,44,46,51,52,60,62,66,68,70,71,72,],[9,9,-2,-4,-5,-6,-7,-8,14,-1,21,21,21,-10,21,21,21,-9,21,-12,21,21,21,21,21,21,21,-11,-13,9,9,-14,9,9,-15,]),'PRINT':([0,1,2,3,4,5,6,7,13,19,32,38,52,60,62,66,68,70,71,72,],[10,10,-2,-4,-5,-6,-7,-8,-1,-10,-9,-12,-11,-13,10,10,-14,10,10,-15,]),'NS':([0,1,2,3,4,5,6,7,13,19,32,38,52,60,62,66,68,70,71,72,],[11,11,-2,-4,-5,-6,-7,-8,-1,-10,-9,-12,-11,-13,11,11,-14,11,11,-15,]),'IF':([0,1,2,3,4,5,6,7,13,19,32,38,52,60,62,66,68,70,71,72,],[12,12,-2,-4,-5,-6,-7,-8,-1,-10,-9,-12,-11,-13,12,12,-14,12,12,-15,]),'$end':([0,1,2,3,4,5,6,7,13,19,32,38,52,60,68,72,],[-3,0,-2,-4,-5,-6,-7,-8,-1,-10,-9,-12,-11,-13,-14,-15,]),'CCURLB':([2,3,4,5,6,7,13,19,32,38,52,60,62,66,68,70,71,72,],[-2,-4,-5,-6,-7,-8,-1,-10,-9,-12,-11,-13,-3,68,-14,-3,72,-15,]),'EQUALS':([9,14,],[15,20,]),'LPAREN':([10,12,15,16,18,20,24,26,27,29,33,39,40,41,42,44,46,51,],[16,18,27,27,33,27,27,44,27,46,33,27,27,27,27,27,27,27,]),'DIRECTIVES':([11,],[17,]),'SEMIC':([14,21,22,23,25,28,30,37,43,47,53,54,55,56,58,65,67,],[19,-29,38,-26,-27,-28,-22,52,-31,60,-16,-17,-18,-19,-30,-21,-20,]),'EXP':([15,16,18,20,24,27,33,39,40,41,42,44,46,51,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'SQR':([15,16,18,20,24,27,33,39,40,41,42,44,46,51,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'MINUS':([15,16,18,20,21,22,23,24,25,27,28,30,31,33,36,37,39,40,41,42,43,44,45,46,49,51,53,54,55,56,58,63,65,67,],[24,24,24,24,-29,40,-26,24,-27,24,-28,-22,40,24,40,40,24,24,24,24,-31,24,40,24,40,24,-16,-17,-18,-19,-30,40,-21,-20,]),'NUMBER':([15,16,18,20,21,24,27,28,30,33,39,40,41,42,43,44,46,51,57,58,65,67,],[30,30,30,30,-29,30,30,-28,-22,30,30,30,30,30,-31,30,30,30,30,-30,-21,-20,]),'LIBRARIES':([17,],[32,]),'VAL_BOOL':([18,33,],[35,35,]),'TIMES':([21,23,25,28,30,43,53,54,55,56,58,65,67,],[-29,41,-27,-28,-22,-31,41,41,-18,-19,-30,-21,-20,]),'DIVIDE':([21,23,25,28,30,43,53,54,55,56,58,65,67,],[-29,42,-27,-28,-22,-31,42,42,-18,-19,-30,-21,-20,]),'PLUS':([21,22,23,25,28,30,31,36,37,43,45,49,53,54,55,56,58,63,65,67,],[-29,39,-26,-27,-28,-22,39,39,39,-31,39,39,-16,-17,-18,-19,-30,39,-21,-20,]),'RPAREN':([21,23,25,28,30,31,34,35,43,45,48,49,53,54,55,56,58,59,61,63,64,65,67,],[-29,-26,-27,-28,-22,47,50,-23,-31,58,61,58,-16,-17,-18,-19,-30,65,-24,-25,67,-21,-20,]),'OP_BOOL':([21,23,25,28,30,36,43,49,53,54,55,56,58,65,67,],[-29,-26,-27,-28,-22,51,-31,51,-16,-17,-18,-19,-30,-21,-20,]),'OCURLB':([50,69,],[62,70,]),'ELSE':([68,],[69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,62,70,],[1,66,71,]),'statement':([0,1,62,66,70,71,],[2,13,2,13,2,13,]),'declaration':([0,1,62,66,70,71,],[3,3,3,3,3,3,]),'assignment':([0,1,62,66,70,71,],[4,4,4,4,4,4,]),'prt':([0,1,62,66,70,71,],[5,5,5,5,5,5,]),'directives':([0,1,62,66,70,71,],[6,6,6,6,6,6,]),'ifst':([0,1,62,66,70,71,],[7,7,7,7,7,7,]),'expression':([15,16,18,20,27,33,51,],[22,31,36,37,45,49,63,]),'term':([15,16,18,20,27,33,39,40,51,],[23,23,23,23,23,23,53,54,23,]),'factor':([15,16,18,20,24,27,33,39,40,41,42,44,46,51,],[25,25,25,25,43,25,25,25,25,55,56,57,59,25,]),'value':([15,16,18,20,24,27,33,39,40,41,42,44,46,51,57,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,64,]),'valbool':([18,33,],[34,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_program','Syntax.py',12),
  ('statements -> statement','statements',1,'p_program','Syntax.py',13),
  ('statements -> <empty>','statements',0,'p_program','Syntax.py',14),
  ('statement -> declaration','statement',1,'p_statement','Syntax.py',22),
  ('statement -> assignment','statement',1,'p_statement','Syntax.py',23),
  ('statement -> prt','statement',1,'p_statement','Syntax.py',24),
  ('statement -> directives','statement',1,'p_statement','Syntax.py',25),
  ('statement -> ifst','statement',1,'p_statement','Syntax.py',26),
  ('directives -> NS DIRECTIVES LIBRARIES','directives',3,'p_directives','Syntax.py',31),
  ('declaration -> TYPE IDENTIFIER SEMIC','declaration',3,'p_declaration','Syntax.py',35),
  ('declaration -> TYPE IDENTIFIER EQUALS expression SEMIC','declaration',5,'p_declaration','Syntax.py',36),
  ('assignment -> IDENTIFIER EQUALS expression SEMIC','assignment',4,'p_assignment','Syntax.py',50),
  ('prt -> PRINT LPAREN expression RPAREN SEMIC','prt',5,'p_print','Syntax.py',60),
  ('ifst -> IF LPAREN valbool RPAREN OCURLB statements CCURLB','ifst',7,'p_if','Syntax.py',65),
  ('ifst -> IF LPAREN valbool RPAREN OCURLB statements CCURLB ELSE OCURLB statements CCURLB','ifst',11,'p_if','Syntax.py',66),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Syntax.py',71),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Syntax.py',76),
  ('term -> term TIMES factor','term',3,'p_term_times','Syntax.py',81),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Syntax.py',86),
  ('factor -> EXP LPAREN factor value RPAREN','factor',5,'p_factor_exp','Syntax.py',91),
  ('factor -> SQR LPAREN factor RPAREN','factor',4,'p_factor_sqr','Syntax.py',96),
  ('value -> NUMBER','value',1,'p_values_num','Syntax.py',101),
  ('valbool -> VAL_BOOL','valbool',1,'p_value_bool','Syntax.py',106),
  ('valbool -> LPAREN valbool RPAREN','valbool',3,'p_value_bool','Syntax.py',107),
  ('valbool -> expression OP_BOOL expression','valbool',3,'p_value_bool','Syntax.py',108),
  ('expression -> term','expression',1,'p_expression_term','Syntax.py',127),
  ('term -> factor','term',1,'p_term_factor','Syntax.py',132),
  ('factor -> value','factor',1,'p_factor_value','Syntax.py',137),
  ('factor -> IDENTIFIER','factor',1,'p_factor_value','Syntax.py',138),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_value','Syntax.py',139),
  ('factor -> MINUS factor','factor',2,'p_factor_value','Syntax.py',140),
]
