Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVIDE
    MINUS

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> declaration
Rule 4     statement -> assignment
Rule 5     statement -> prt
Rule 6     declaration -> TYPE IDENTIFIER SEMIC
Rule 7     assignment -> IDENTIFIER EQUALS expression SEMIC
Rule 8     prt -> PRINT LPAREN expression RPAREN SEMIC
Rule 9     expression -> expression PLUS term
Rule 10    term -> term TIMES factor
Rule 11    factor -> NUMBER
Rule 12    expression -> term
Rule 13    term -> factor

Terminals, with rules where they appear

DIVIDE               : 
EQUALS               : 7
IDENTIFIER           : 6 7
LPAREN               : 8
MINUS                : 
NUMBER               : 11
PLUS                 : 9
PRINT                : 8
RPAREN               : 8
SEMIC                : 6 7 8
TIMES                : 10
TYPE                 : 6
error                : 

Nonterminals, with rules where they appear

assignment           : 4
declaration          : 3
expression           : 7 8 9
factor               : 10 13
prt                  : 5
statement            : 1 2
statements           : 1 0
term                 : 9 10 12

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . prt
    (6) declaration -> . TYPE IDENTIFIER SEMIC
    (7) assignment -> . IDENTIFIER EQUALS expression SEMIC
    (8) prt -> . PRINT LPAREN expression RPAREN SEMIC

    TYPE            shift and go to state 6
    IDENTIFIER      shift and go to state 7
    PRINT           shift and go to state 8

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    prt                            shift and go to state 5

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . prt
    (6) declaration -> . TYPE IDENTIFIER SEMIC
    (7) assignment -> . IDENTIFIER EQUALS expression SEMIC
    (8) prt -> . PRINT LPAREN expression RPAREN SEMIC

    TYPE            shift and go to state 6
    IDENTIFIER      shift and go to state 7
    PRINT           shift and go to state 8

    statement                      shift and go to state 9
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    prt                            shift and go to state 5

state 2

    (2) statements -> statement .

    TYPE            reduce using rule 2 (statements -> statement .)
    IDENTIFIER      reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> declaration .

    TYPE            reduce using rule 3 (statement -> declaration .)
    IDENTIFIER      reduce using rule 3 (statement -> declaration .)
    PRINT           reduce using rule 3 (statement -> declaration .)
    $end            reduce using rule 3 (statement -> declaration .)


state 4

    (4) statement -> assignment .

    TYPE            reduce using rule 4 (statement -> assignment .)
    IDENTIFIER      reduce using rule 4 (statement -> assignment .)
    PRINT           reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> prt .

    TYPE            reduce using rule 5 (statement -> prt .)
    IDENTIFIER      reduce using rule 5 (statement -> prt .)
    PRINT           reduce using rule 5 (statement -> prt .)
    $end            reduce using rule 5 (statement -> prt .)


state 6

    (6) declaration -> TYPE . IDENTIFIER SEMIC

    IDENTIFIER      shift and go to state 10


state 7

    (7) assignment -> IDENTIFIER . EQUALS expression SEMIC

    EQUALS          shift and go to state 11


state 8

    (8) prt -> PRINT . LPAREN expression RPAREN SEMIC

    LPAREN          shift and go to state 12


state 9

    (1) statements -> statements statement .

    TYPE            reduce using rule 1 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)


state 10

    (6) declaration -> TYPE IDENTIFIER . SEMIC

    SEMIC           shift and go to state 13


state 11

    (7) assignment -> IDENTIFIER EQUALS . expression SEMIC
    (9) expression -> . expression PLUS term
    (12) expression -> . term
    (10) term -> . term TIMES factor
    (13) term -> . factor
    (11) factor -> . NUMBER

    NUMBER          shift and go to state 17

    expression                     shift and go to state 14
    term                           shift and go to state 15
    factor                         shift and go to state 16

state 12

    (8) prt -> PRINT LPAREN . expression RPAREN SEMIC
    (9) expression -> . expression PLUS term
    (12) expression -> . term
    (10) term -> . term TIMES factor
    (13) term -> . factor
    (11) factor -> . NUMBER

    NUMBER          shift and go to state 17

    expression                     shift and go to state 18
    term                           shift and go to state 15
    factor                         shift and go to state 16

state 13

    (6) declaration -> TYPE IDENTIFIER SEMIC .

    TYPE            reduce using rule 6 (declaration -> TYPE IDENTIFIER SEMIC .)
    IDENTIFIER      reduce using rule 6 (declaration -> TYPE IDENTIFIER SEMIC .)
    PRINT           reduce using rule 6 (declaration -> TYPE IDENTIFIER SEMIC .)
    $end            reduce using rule 6 (declaration -> TYPE IDENTIFIER SEMIC .)


state 14

    (7) assignment -> IDENTIFIER EQUALS expression . SEMIC
    (9) expression -> expression . PLUS term

    SEMIC           shift and go to state 19
    PLUS            shift and go to state 20


state 15

    (12) expression -> term .
    (10) term -> term . TIMES factor

    SEMIC           reduce using rule 12 (expression -> term .)
    PLUS            reduce using rule 12 (expression -> term .)
    RPAREN          reduce using rule 12 (expression -> term .)
    TIMES           shift and go to state 21


state 16

    (13) term -> factor .

    TIMES           reduce using rule 13 (term -> factor .)
    SEMIC           reduce using rule 13 (term -> factor .)
    PLUS            reduce using rule 13 (term -> factor .)
    RPAREN          reduce using rule 13 (term -> factor .)


state 17

    (11) factor -> NUMBER .

    TIMES           reduce using rule 11 (factor -> NUMBER .)
    SEMIC           reduce using rule 11 (factor -> NUMBER .)
    PLUS            reduce using rule 11 (factor -> NUMBER .)
    RPAREN          reduce using rule 11 (factor -> NUMBER .)


state 18

    (8) prt -> PRINT LPAREN expression . RPAREN SEMIC
    (9) expression -> expression . PLUS term

    RPAREN          shift and go to state 22
    PLUS            shift and go to state 20


state 19

    (7) assignment -> IDENTIFIER EQUALS expression SEMIC .

    TYPE            reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression SEMIC .)
    IDENTIFIER      reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression SEMIC .)
    PRINT           reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression SEMIC .)
    $end            reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression SEMIC .)


state 20

    (9) expression -> expression PLUS . term
    (10) term -> . term TIMES factor
    (13) term -> . factor
    (11) factor -> . NUMBER

    NUMBER          shift and go to state 17

    term                           shift and go to state 23
    factor                         shift and go to state 16

state 21

    (10) term -> term TIMES . factor
    (11) factor -> . NUMBER

    NUMBER          shift and go to state 17

    factor                         shift and go to state 24

state 22

    (8) prt -> PRINT LPAREN expression RPAREN . SEMIC

    SEMIC           shift and go to state 25


state 23

    (9) expression -> expression PLUS term .
    (10) term -> term . TIMES factor

    SEMIC           reduce using rule 9 (expression -> expression PLUS term .)
    PLUS            reduce using rule 9 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS term .)
    TIMES           shift and go to state 21


state 24

    (10) term -> term TIMES factor .

    TIMES           reduce using rule 10 (term -> term TIMES factor .)
    SEMIC           reduce using rule 10 (term -> term TIMES factor .)
    PLUS            reduce using rule 10 (term -> term TIMES factor .)
    RPAREN          reduce using rule 10 (term -> term TIMES factor .)


state 25

    (8) prt -> PRINT LPAREN expression RPAREN SEMIC .

    TYPE            reduce using rule 8 (prt -> PRINT LPAREN expression RPAREN SEMIC .)
    IDENTIFIER      reduce using rule 8 (prt -> PRINT LPAREN expression RPAREN SEMIC .)
    PRINT           reduce using rule 8 (prt -> PRINT LPAREN expression RPAREN SEMIC .)
    $end            reduce using rule 8 (prt -> PRINT LPAREN expression RPAREN SEMIC .)

